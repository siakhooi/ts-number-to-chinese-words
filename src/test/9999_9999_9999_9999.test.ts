import {convertNumber} from '../main/index';

test.each([
  [1_0000_0000_0000, '一兆'],
  [2_0000_0000_0001, '二兆零一'],
  [2_0000_0000_0011, '二兆零一十一'],
  [3_0000_0000_0020, '三兆零二十'],
  [4_0000_0000_0300, '四兆零三百'],
  [5_0000_0000_4000, '五兆零四千'],
  [6_0000_0005_0000, '六兆零五万'],
  [7_0000_0060_0000, '七兆零六十万'],
  [8_0000_0700_0000, '八兆零七百万'],
  [9_0000_8000_0000, '九兆零八千万'],
  [6_0005_0000_0000, '六兆零五亿'],
  [7_0060_0000_0000, '七兆零六十亿'],
  [8_0700_0000_0000, '八兆零七百亿'],
  [9_8000_0000_0000, '九兆八千亿'],
  [1_0000_0006_5600, '一兆零六万五千六百'],
  [1_3040_0205_5070, '一兆三千零四十亿零二百零五万五千零七十'],
  [4_0000_0000_0680, '四兆零六百八十'],
  [4_0000_0680_0000, '四兆零六百八十万'],
  [4_0680_0000_0000, '四兆零六百八十亿'],
  [3_0000_0000_5008, '三兆零五千零八'],
  [3_0000_5008_0000, '三兆零五千零八万'],
  [3_5008_0000_0000, '三兆五千零八亿'],
  [1_0101_0101_0101, '一兆零一百零一亿零一百零一万零一百零一'],
  [10_0000_0000_0000, '一十兆'],
  [20_0000_0000_0000, '二十兆'],
  [10_0000_0000_0001, '一十兆零一'],
  [10_0000_0000_1000, '一十兆零一千'],
  [10_1010_1010_1010, '一十兆一千零一十亿一千零一十万一千零一十'],
  [101_0101_0101_0101, '一百零一兆零一百零一亿零一百零一万零一百零一'],
  [100_3000_4000_2000, '一百兆三千亿四千万二千'],
  [700_0000_0000_0000, '七百兆'],
  [8000_0000_0000_0000, '八千兆'],
  [
    5432_9876_1234_5678,
    '五千四百三十二兆九千八百七十六亿一千二百三十四万五千六百七十八',
  ],
  [
    9007_1992_5474_0991,
    '九千零七兆一千九百九十二亿五千四百七十四万零九百九十一',
  ],
])(
  'integer-1_0000_0000-9999_9999_9999 - default',
  (input: number, expected: string) => {
    expect(convertNumber(input)).toBe(expected);
  }
);

test.each([
  [1_0000_0000_0000, '一兆'],
  [2_0000_0000_0001, '二兆零一'],
  [2_0000_0000_0011, '二兆零一十一'],
  [3_0000_0000_0020, '三兆零二十'],
  [4_0000_0000_0300, '四兆零三百'],
  [5_0000_0000_4000, '五兆零四千'],
  [6_0000_0005_0000, '六兆零五万'],
  [7_0000_0060_0000, '七兆零六十万'],
  [8_0000_0700_0000, '八兆零七百万'],
  [9_0000_8000_0000, '九兆零八千万'],
  [6_0005_0000_0000, '六兆零五亿'],
  [7_0060_0000_0000, '七兆零六十亿'],
  [8_0700_0000_0000, '八兆零七百亿'],
  [9_8000_0000_0000, '九兆八千亿'],
  [1_0000_0006_5600, '一兆零六万五千六百'],
  [1_3040_0205_5070, '一兆三千零四十亿零二百零五万五千零七十'],
  [4_0000_0000_0680, '四兆零六百八十'],
  [4_0000_0680_0000, '四兆零六百八十万'],
  [4_0680_0000_0000, '四兆零六百八十亿'],
  [3_0000_0000_5008, '三兆零五千零八'],
  [3_0000_5008_0000, '三兆零五千零八万'],
  [3_5008_0000_0000, '三兆五千零八亿'],
  [1_0101_0101_0101, '一兆零一百零一亿零一百零一万零一百零一'],
  [10_0000_0000_0000, '一十兆'],
  [20_0000_0000_0000, '二十兆'],
  [10_0000_0000_0001, '一十兆零一'],
  [10_0000_0000_1000, '一十兆零一千'],
  [10_1010_1010_1010, '一十兆一千零一十亿一千零一十万一千零一十'],
  [101_0101_0101_0101, '一百零一兆零一百零一亿零一百零一万零一百零一'],
  [100_3000_4000_2000, '一百兆三千亿四千万二千'],
  [700_0000_0000_0000, '七百兆'],
  [8000_0000_0000_0000, '八千兆'],
  [
    5432_9876_1234_5678,
    '五千四百三十二兆九千八百七十六亿一千二百三十四万五千六百七十八',
  ],
  [
    9007_1992_5474_0991,
    '九千零七兆一千九百九十二亿五千四百七十四万零九百九十一',
  ],
])(
  'integer-1_0000_0000-9999_9999_9999 - simplified',
  (input: number, expected: string) => {
    expect(convertNumber(input, {useTraditional: false})).toBe(expected);
  }
);

test.each([
  [1_0000_0000_0000, '一兆'],
  [2_0000_0000_0001, '二兆零一'],
  [2_0000_0000_0011, '二兆零一十一'],
  [3_0000_0000_0020, '三兆零二十'],
  [4_0000_0000_0300, '四兆零三百'],
  [5_0000_0000_4000, '五兆零四千'],
  [6_0000_0005_0000, '六兆零五萬'],
  [7_0000_0060_0000, '七兆零六十萬'],
  [8_0000_0700_0000, '八兆零七百萬'],
  [9_0000_8000_0000, '九兆零八千萬'],
  [6_0005_0000_0000, '六兆零五億'],
  [7_0060_0000_0000, '七兆零六十億'],
  [8_0700_0000_0000, '八兆零七百億'],
  [9_8000_0000_0000, '九兆八千億'],
  [1_0000_0006_5600, '一兆零六萬五千六百'],
  [1_3040_0205_5070, '一兆三千零四十億零二百零五萬五千零七十'],
  [4_0000_0000_0680, '四兆零六百八十'],
  [4_0000_0680_0000, '四兆零六百八十萬'],
  [4_0680_0000_0000, '四兆零六百八十億'],
  [3_0000_0000_5008, '三兆零五千零八'],
  [3_0000_5008_0000, '三兆零五千零八萬'],
  [3_5008_0000_0000, '三兆五千零八億'],
  [1_0101_0101_0101, '一兆零一百零一億零一百零一萬零一百零一'],
  [10_0000_0000_0000, '一十兆'],
  [20_0000_0000_0000, '二十兆'],
  [10_0000_0000_0001, '一十兆零一'],
  [10_0000_0000_1000, '一十兆零一千'],
  [10_1010_1010_1010, '一十兆一千零一十億一千零一十萬一千零一十'],
  [101_0101_0101_0101, '一百零一兆零一百零一億零一百零一萬零一百零一'],
  [100_3000_4000_2000, '一百兆三千億四千萬二千'],
  [700_0000_0000_0000, '七百兆'],
  [8000_0000_0000_0000, '八千兆'],
  [
    5432_9876_1234_5678,
    '五千四百三十二兆九千八百七十六億一千二百三十四萬五千六百七十八',
  ],
  [
    9007_1992_5474_0991,
    '九千零七兆一千九百九十二億五千四百七十四萬零九百九十一',
  ],
])(
  'integer-1_0000_0000-9999_9999_9999 - traditional',
  (input: number, expected: string) => {
    expect(convertNumber(input, {useTraditional: true})).toBe(expected);
  }
);
